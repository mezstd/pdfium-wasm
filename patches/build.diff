diff --git a/build_config.h b/build_config.h
index c37c7429a..2b779c0c1 100644
--- a/build_config.h
+++ b/build_config.h
@@ -198,7 +198,9 @@
 #define ARCH_CPU_BIG_ENDIAN 1
 #endif
 #else
-#error Please add support for your architecture in build/build_config.h
+#define ARCH_CPU_X86_FAMILY 1
+#define ARCH_CPU_32_BITS 1
+#define ARCH_CPU_LITTLE_ENDIAN 1 
 #endif
 
 // Type detection for wchar_t.
diff --git a/config/BUILDCONFIG.gn b/config/BUILDCONFIG.gn
index 093a94b31..b82260c1f 100644
--- a/config/BUILDCONFIG.gn
+++ b/config/BUILDCONFIG.gn
@@ -328,7 +328,6 @@ default_compiler_configs = [
   "//build/config/compiler:no_exceptions",
   "//build/config/compiler:no_rtti",
   "//build/config/compiler:runtime_library",
-  "//build/config/compiler:thin_archive",
   "//build/config/compiler:default_init_stack_vars",
   "//build/config/compiler/pgo:default_pgo_flags",
   "//build/config/coverage:default_coverage",
diff --git a/config/compiler/BUILD.gn b/config/compiler/BUILD.gn
index f1e057217..1240ed0c1 100644
--- a/config/compiler/BUILD.gn
+++ b/config/compiler/BUILD.gn
@@ -758,8 +758,6 @@ config("compiler_cpu_abi") {
     # simplicity we always explicitly set the architecture.
     if (current_cpu == "x64") {
       cflags += [
-        "-m64",
-        "-march=$x64_arch",
         "-msse3",
       ]
       ldflags += [ "-m64" ]
@@ -2354,7 +2352,6 @@ config("symbols") {
         # which lld needs in order to generate a correct GDB index.
         # TODO(pcc): Try to make lld understand non-GNU-format pubnames
         # sections (llvm.org/PR34820).
-        cflags += [ "-ggnu-pubnames" ]
       }
       ldflags += [ "-Wl,--gdb-index" ]
     }
diff --git a/toolchain/gcc_toolchain.gni b/toolchain/gcc_toolchain.gni
index 6e3c02444..b458ec651 100644
--- a/toolchain/gcc_toolchain.gni
+++ b/toolchain/gcc_toolchain.gni
@@ -627,8 +627,8 @@ template("clang_toolchain") {
 
   gcc_toolchain(target_name) {
     prefix = rebase_path("$clang_base_path/bin", root_build_dir)
-    cc = "$prefix/clang"
-    cxx = "$prefix/clang++"
+    cc = "emcc"
+    cxx = "em++"
     ld = cxx
     readelf = "${toolprefix}readelf"
     ar = "${prefix}/llvm-ar"
